{"version":3,"sources":["config.js","contexts/PlayerContext.js","contexts/SceneContext.js","components/controls.js","App.js","reportWebVitals.js","index.js"],"names":["gridSize","module","exports","boxSize","indexesToCheck","playerPosition","checkingRadius","maxIndex","x","Math","round","z","index","res","i","offset","j","toCheck","toCheckBelow","push","PlayerContext","createContext","PlayerContextProvider","props","useState","y","position","setPosition","Provider","value","children","SceneContext","SceneContextProvider","window","iter","objects","setObjects","speed","Controls","doUpdateVelocity","setDoUpdateVelocity","movementSpeed","setMovementSpeed","setCameraPosition","useContext","useThree","camera","gl","ref","useRef","performance","now","prevTime","setPrevTime","jumping","setJumping","onObject","setOnObject","forward","right","velocity","setVelocity","useEffect","listeners","current","lock","key","actions","l","u","unlock","c","console","log","getObject","intersections","e","p","toLowerCase","w","a","s","d","shift","addEventListener","removeEventListener","useFrame","far","updateProjectionMatrix","currentPosition","raycaster","Raycaster","Vector3","ray","origin","copy","possibleIntersections","intersectObjects","map","length","time","delta","moveForward","moveRight","max","acceleration","gravity","localStorage","setItem","JSON","stringify","currentRef","shouldReset","canJump","args","domElement","color","intensity","decay","extend","PointerLockControls","Text","noise","makeNoise3D","Array","from","_","centerCoords","App","MinecraftScene","DebugWindow","CrossHair","id","fallback","Boxes","debug","setDebug","requestAnimationFrame","parse","getItem","className","translate","useLoader","TextureLoader","textureTop","textureSide","textureBottom","font","fontSize","maxWidth","lineHeight","letterSpacing","textAlign","materialType","element","attach","attachArray","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17d4d4f.chunk.js","sourcesContent":["const gridSize = 30\nconst boxSize = 3\nconst indexesToCheck = (playerPosition, checkingRadius = 1) => {\n  const maxIndex = gridSize * gridSize * 2\n  const x = Math.round(playerPosition.x / boxSize)\n  const z = Math.round(playerPosition.z / boxSize)\n  const index = ((z + 1) * gridSize) - (gridSize - x)\n  const res = []\n  for(let i = -checkingRadius; i <= checkingRadius; i++) {\n    const offset = i * gridSize\n    for(let j = -checkingRadius; j <= checkingRadius; j++) {\n      const toCheck = index + offset + j\n      const toCheckBelow = index + offset + j + (gridSize * gridSize)\n      if(toCheck > 0 && toCheck < maxIndex) res.push(toCheck)\n      if(toCheckBelow > 0 && toCheckBelow < maxIndex) res.push(toCheckBelow)\n    }\n  }\n  return res\n}\n\nmodule.exports = {\n  gridSize,\n  boxSize,\n  indexesToCheck\n}","import { createContext, useState } from 'react'\nexport const PlayerContext = createContext();\n\nconst PlayerContextProvider = props => {\n  const [position, setPosition] = useState({x: 0, y: 0, z: 0})\n  return <PlayerContext.Provider value={{ position, setPosition }}>{props.children}</PlayerContext.Provider>;\n};\n\nexport default PlayerContextProvider;","import { createContext, useState } from 'react'\nexport const SceneContext = createContext();\n\nconst SceneContextProvider = props => {\n  window.iter = 0\n  const [objects, setObjects] = useState([])\n  return <SceneContext.Provider value={{ objects, setObjects }}>{props.children}</SceneContext.Provider>;\n};\n\nexport default SceneContextProvider;","import { Raycaster, Vector3 } from 'three'\nimport { useEffect, useState, useRef, useContext } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport { SceneContext } from '../contexts/SceneContext'\nimport { PlayerContext } from '../contexts/PlayerContext'\nimport { gridSize, boxSize, indexesToCheck } from '../config'\n\nconst playerHeight = 4\nconst groundLevel = -50\nconst terminalVelocity = -20\nconst mass = 10\nconst gravity = 9.8\nconst speed = {\n  walking: 0.3,\n  running: 0.5,\n}\n\n\n\n\nexport default function Controls() {\n  const [doUpdateVelocity, setDoUpdateVelocity] = useState(true)\n  const [movementSpeed, setMovementSpeed] = useState(speed.walking)\n  const [position, setCameraPosition] = useState({x: 0, y: 0, z: 0})\n  const { objects } = useContext(SceneContext)\n  const { setPosition } = useContext(PlayerContext)\n  const { camera, gl } = useThree()\n  const ref = useRef()\n  const [prevTime, setPrevTime] = useState(performance.now())\n  const [jumping, setJumping] = useState(true)\n  const [onObject, setOnObject] = useState(false)\n  const [velocity, setVelocity] = useState({\n    forward: 0,\n    right: 0,\n    y: 0,\n  })\n  const handlers = () => {\n    const unrestrictedJump = () => {\n      setVelocity(velocity => ({ ...velocity, y: 50 }))\n      setJumping(true)\n    }\n    const jump = () => {\n      if(onObject && !jumping) {\n        setVelocity(velocity => ({ ...velocity, y: 35 }))\n        setJumping(true)\n      }\n    }\n    const listeners = {\n      mousedown: () => {\n        ref.current.lock()\n      },\n      keypress: ({ key }) => {\n        key = key.toLowerCase()\n        const actions = {\n          l: () => ref.current.lock(),\n          u: () => ref.current.unlock(),\n          c: () => console.log({current: ref.current, getObject: ref.current.getObject()}),\n          i: () => {\n            const playerPosition = ref.current.getObject().position\n            const x = Math.round(playerPosition.x / boxSize)\n            const z = Math.round(playerPosition.z / boxSize)\n            const index = ((z + 1) * gridSize) - (gridSize - x)\n            console.log({\n              intersections: indexesToCheck(playerPosition, 1),\n              index: index,\n            })\n          },\n          e: () => unrestrictedJump(),\n          ' ': () => jump(),\n          p: () => setDoUpdateVelocity(doUpdateVelocity => !doUpdateVelocity),\n        }\n        if(actions[key]) actions[key]()\n      },\n      keydown: ({key}) => {\n        key = key.toLowerCase()\n        const actions = {\n          w: () => setVelocity(velocity => ({ ...velocity, forward: movementSpeed })),\n          a: () => setVelocity(velocity => ({ ...velocity, right: -movementSpeed })),\n          s: () => setVelocity(velocity => ({ ...velocity, forward: -movementSpeed })),\n          d: () => setVelocity(velocity => ({ ...velocity, right: movementSpeed })),\n          shift: () => setMovementSpeed(speed.running)\n        }\n        if(actions[key]) actions[key]()\n        // else console.log({key})\n      },\n      keyup: ({ key }) => {\n        key = key.toLowerCase()\n        const actions = {\n          w: () => setVelocity(velocity => ({ ...velocity, forward:0 })),\n          a: () => setVelocity(velocity => ({ ...velocity, right: 0 })),\n          s: () => setVelocity(velocity => ({ ...velocity, forward: 0 })),\n          d: () => setVelocity(velocity => ({ ...velocity, right:0 })),\n          shift: () => setMovementSpeed(speed.walking)\n        }\n        if(actions[key]) actions[key]()\n      }\n    }\n    window.addEventListener('mousedown', listeners.mousedown)\n    window.addEventListener('keypress', listeners.keypress)\n    window.addEventListener('keydown', listeners.keydown)\n    window.addEventListener('keyup', listeners.keyup)\n\n    return function() {\n      window.removeEventListener('mousedown', listeners.mousedown)\n    window.removeEventListener('keypress', listeners.keypress)\n    window.removeEventListener('keydown', listeners.keydown)\n    window.removeEventListener('keyup', listeners.keyup)\n    }\n  }\n  useEffect(handlers, [jumping, onObject, movementSpeed])\n  \n  useFrame(() => {\n    ref.current.getObject().far = 100\n    ref.current.getObject().updateProjectionMatrix()\n    const currentPosition = ref.current.getObject().position\n    let raycaster = new Raycaster( new Vector3(), new Vector3( 0, - 1, 0 ), 0, 2)\n    raycaster.ray.origin.copy( currentPosition )\n    raycaster.ray.origin.y -= playerHeight\n    // const gridSize = 30\n    const possibleIntersections = indexesToCheck(currentPosition, 1)\n    const intersections = raycaster.intersectObjects( possibleIntersections.map(i => objects[i]) )\n    // const intersections = raycaster.intersectObjects( Object.values(objects) )\n    setOnObject(intersections.length > 0 || currentPosition.y <= groundLevel)\n    const land = () => {\n      setVelocity(velocity => ({...velocity, y: 0}))\n      setJumping(false)\n    }\n    const time = performance.now()\n    const delta = ( time - prevTime ) / 1000\n    ref.current.moveForward(velocity.forward)\n    ref.current.moveRight(velocity.right)\n    if(jumping) {\n      currentPosition.y = Math.max((velocity.y * delta) + currentPosition.y, groundLevel)\n    }\n    const acceleration = gravity * mass * delta\n    \n    if(doUpdateVelocity) setVelocity(velocity => ({ ...velocity, y: Math.max(velocity.y - acceleration, terminalVelocity)}))\n    else setVelocity(velocity => ({ ...velocity, y: 0}))\n    setPrevTime(time)\n    if(onObject && velocity.y === terminalVelocity) land()\n    if(!onObject && !jumping) {\n      setVelocity(velocity => ({ ...velocity, y: 0}))\n      setJumping(true)\n    }\n    setCameraPosition(currentPosition)\n    setPosition(currentPosition)\n    localStorage.setItem('debug', JSON.stringify({\n      currentRef: currentPosition,\n      shouldReset: currentPosition.y < groundLevel,\n      jumping,\n      onObject,\n      canJump: onObject && !jumping,\n      movementSpeed\n    }))\n  })\n\n  return (\n    <>\n    <pointerLockControls ref={ref} args={[camera, gl.domElement]} />\n    <pointLight color={0xffffff} position={[position.x, position.y, position.z]} intensity={0.1} decay={2} />\n    </>\n  )\n}\n\n","import './App.css';\nimport { useEffect, useState, useRef, useContext, Suspense } from 'react'\nimport { Canvas, extend, useFrame, useLoader } from '@react-three/fiber'\nimport { PointerLockControls } from \"three/examples/jsm/controls/PointerLockControls\";\nimport PlayerContextProvider, { PlayerContext } from './contexts/PlayerContext'\nimport SceneContextProvider, { SceneContext } from './contexts/SceneContext'\nimport Controls from './components/controls'\nimport { makeNoise3D } from 'fast-simplex-noise'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\nimport fonts from \"./assets/fonts\"\nimport { Text } from \"troika-three-text\"\nimport { gridSize, boxSize, indexesToCheck } from './config'\n\nextend({ PointerLockControls, Text })\n\n\nconst noise = makeNoise3D()\nconst map = Array.from({length: gridSize}).map((_, x) => Array.from({length: gridSize}).map((_, y) => {\n  const z = Math.round(noise(x / 10, y / 10, 0))\n  return z\n}))\n\nconst centerCoords = {\n  x: gridSize * boxSize / 2,\n  y: 80,\n  z: gridSize * boxSize / 2,\n}\n\n\n\nexport default function App() {\n  return (\n    <>\n    <MinecraftScene />\n    <DebugWindow />\n    <CrossHair />\n    </>\n  )\n}\n\nfunction MinecraftScene() {\n  return (\n    <div id=\"canvas-container\">\n      <Canvas>\n      <Suspense fallback={null}>\n        <PlayerContextProvider>\n      <SceneContextProvider>\n        <ambientLight intensity={0.075} />\n        <pointLight color={0xc9ae34} position={[centerCoords.x, centerCoords.y, centerCoords.z]} />\n        <mesh position={[centerCoords.x, centerCoords.y, centerCoords.z]}>\n          <boxGeometry args={[2, 2, 2]}/>\n          <meshPhongMaterial />\n        </mesh>\n        <Boxes />\n        <Controls />\n        </SceneContextProvider>\n        </PlayerContextProvider>\n        </Suspense>\n      </Canvas>\n    </div>\n  )\n}\n\nfunction DebugWindow() {\n  const [debug, setDebug] = useState({})\n  useEffect(() => {\n    window.requestAnimationFrame(() => {\n      setDebug(JSON.parse(localStorage.getItem('debug')))\n    })\n  })\n  return (\n    <div className=\"debug\">\n      <div>Controls:</div>\n      <div>WASD to move</div>\n      <div>mouse to look</div>\n      <div>space to jump</div>\n      <div>click to lock cursor</div>\n      <div>esc or u to unlock cursor</div>\n      <div>e to fly</div>\n      <pre><code>state: {JSON.stringify(debug, null, 2)}</code></pre>\n    </div>\n  )\n}\nfunction CrossHair() {\n  return (\n    <div className=\"crosshair\">\n      <p>+</p>\n    </div>\n  )\n}\n\nfunction Boxes() {\n  const translate = {\n    y: -20\n  }\n  const { position } = useContext(PlayerContext)\n  const { setObjects } = useContext(SceneContext)\n  const ref = useRef({})\n  useEffect(() => {\n    setObjects(ref.current)\n  }, [ref, setObjects])\n  const [textureTop, textureSide, textureBottom] = useLoader(TextureLoader, [\n    '/images/grass-top.jpeg',\n    '/images/grass-side.jpeg',\n    '/images/grass-bottom.jpeg'\n  ])\n\n  const [rotation, setRotation] = useState([0, 0, 90, 0]);\n  const [opts, setOpts] = useState({\n    font: \"Philosopher\",\n    fontSize: 2,\n    color: \"#99ccff\",\n    maxWidth: 300,\n    lineHeight: 1,\n    letterSpacing: 0,\n    textAlign: \"justify\",\n    materialType: \"MeshPhongMaterial\"\n  });\n\n  // const [indexes, setIndexes] = useState([])\n  // useFrame(() => {\n  //   setIndexes(indexesToCheck(position, 5))\n  // })\n\n  return (\n    <>\n      {[...Array.from({length: gridSize}).map((_, x) => Array.from({length: gridSize}).map((_, y) => {\n          const z = map[x][y]\n          const res = (\n            <>\n            <mesh position={[x * boxSize, (z * boxSize) + translate.y, (y * boxSize)]} key={[x, y].join()} ref={element => {ref.current[x + (y * gridSize)] = element}}>\n              <boxGeometry args={[boxSize, boxSize, boxSize]} attach=\"geometry\" />             \n              <meshStandardMaterial map={textureSide} attachArray=\"material\" />\n              <meshStandardMaterial map={textureSide} attachArray=\"material\" />\n              <meshStandardMaterial map={textureTop} attachArray=\"material\" />\n              <meshStandardMaterial map={textureBottom} attachArray=\"material\" />\n              <meshStandardMaterial map={textureSide} attachArray=\"material\" />\n              <meshStandardMaterial map={textureSide} attachArray=\"material\" />\n            </mesh>\n            \n            <mesh position={[x * boxSize, (z * boxSize) + translate.y - boxSize, (y * boxSize)]} key={[x, y,2].join()} ref={element => {ref.current[x + (y * gridSize) + (gridSize * gridSize)] = element}}>\n              <boxGeometry args={[boxSize, boxSize, boxSize]} attach=\"geometry\" />             \n              <meshStandardMaterial map={textureSide} attach=\"material\" />\n            </mesh>\n            {/* {indexes.includes(x + (y * gridSize)) &&\n            <text\n              position={[x * boxSize, (z * boxSize) + translate.y + boxSize, (y * boxSize)]}\n              rotation={rotation}\n              {...opts}\n              text={`${x + (y * gridSize)}`}\n              font={fonts[opts.font]}\n              anchorX=\"center\"\n              anchorY=\"middle\"\n            >\n              {opts.materialType === \"MeshPhongMaterial\" ? (\n                <meshPhongMaterial attach=\"material\" color={opts.color} />\n              ) : null}\n            </text>\n            } */}\n          </>\n          )\n          return res\n      }))]}\n    </>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}